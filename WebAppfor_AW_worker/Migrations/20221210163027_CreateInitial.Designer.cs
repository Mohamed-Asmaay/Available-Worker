// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppfor_AW_worker.Data;

#nullable disable

namespace WebAppfor_AW_worker.Migrations
{
    [DbContext(typeof(WebAppfor_AW_workerContext))]
    [Migration("20221210163027_CreateInitial")]
    partial class CreateInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebAppfor_AW_worker.Models.ComplaintTbl", b =>
                {
                    b.Property<int>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComId"), 1L, 1);

                    b.Property<DateTime?>("ComDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComDescription")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReqId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UsId")
                        .HasColumnType("int");

                    b.HasKey("ComId");

                    b.HasIndex("ReqId");

                    b.HasIndex("UsId");

                    b.ToTable("ComplaintTbl");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.JobTbl", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"), 1L, 1);

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.ToTable("JobTbl");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.RegionTbl", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"), 1L, 1);

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegionId");

                    b.ToTable("RegionTbl");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.RequestTbl", b =>
                {
                    b.Property<int>("ReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReqId"), 1L, 1);

                    b.Property<bool?>("ReqAccept")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReqConfirmation")
                        .HasColumnType("bit");

                    b.Property<float?>("ReqCost")
                        .HasColumnType("real");

                    b.Property<bool?>("ReqDecline")
                        .HasColumnType("bit");

                    b.Property<string>("ReqDescription")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReqProblem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ReqTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsId")
                        .HasColumnType("int");

                    b.Property<int>("WrId")
                        .HasColumnType("int");

                    b.HasKey("ReqId");

                    b.HasIndex("UsId");

                    b.HasIndex("WrId");

                    b.ToTable("RequestTbl");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.UserTbl", b =>
                {
                    b.Property<int>("UsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsId"), 1L, 1);

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionNameNavigationRegionId")
                        .HasColumnType("int");

                    b.Property<string>("UsAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UsEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UsPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UsPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsId");

                    b.HasIndex("RegionNameNavigationRegionId");

                    b.ToTable("UserTbl");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.WorkerTbl", b =>
                {
                    b.Property<int>("WrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WrId"), 1L, 1);

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobNameNavigationJobId")
                        .HasColumnType("int");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionNameNavigationRegionId")
                        .HasColumnType("int");

                    b.Property<string>("WrAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("WrAvability")
                        .HasColumnType("bit");

                    b.Property<string>("WrEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WrGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WrName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("WrPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("WrPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WrPhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WrId");

                    b.HasIndex("JobNameNavigationJobId");

                    b.HasIndex("RegionNameNavigationRegionId");

                    b.ToTable("WorkerTbl");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.ComplaintTbl", b =>
                {
                    b.HasOne("WebAppfor_AW_worker.Models.RequestTbl", "Req")
                        .WithMany("ComplaintTbls")
                        .HasForeignKey("ReqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppfor_AW_worker.Models.UserTbl", "Us")
                        .WithMany("ComplaintTbls")
                        .HasForeignKey("UsId");

                    b.Navigation("Req");

                    b.Navigation("Us");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.RequestTbl", b =>
                {
                    b.HasOne("WebAppfor_AW_worker.Models.UserTbl", "Us")
                        .WithMany("RequestTbls")
                        .HasForeignKey("UsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppfor_AW_worker.Models.WorkerTbl", "Wr")
                        .WithMany("RequestTbls")
                        .HasForeignKey("WrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Us");

                    b.Navigation("Wr");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.UserTbl", b =>
                {
                    b.HasOne("WebAppfor_AW_worker.Models.RegionTbl", "RegionNameNavigation")
                        .WithMany("UserTbls")
                        .HasForeignKey("RegionNameNavigationRegionId");

                    b.Navigation("RegionNameNavigation");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.WorkerTbl", b =>
                {
                    b.HasOne("WebAppfor_AW_worker.Models.JobTbl", "JobNameNavigation")
                        .WithMany("WorkerTbls")
                        .HasForeignKey("JobNameNavigationJobId");

                    b.HasOne("WebAppfor_AW_worker.Models.RegionTbl", "RegionNameNavigation")
                        .WithMany("WorkerTbls")
                        .HasForeignKey("RegionNameNavigationRegionId");

                    b.Navigation("JobNameNavigation");

                    b.Navigation("RegionNameNavigation");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.JobTbl", b =>
                {
                    b.Navigation("WorkerTbls");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.RegionTbl", b =>
                {
                    b.Navigation("UserTbls");

                    b.Navigation("WorkerTbls");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.RequestTbl", b =>
                {
                    b.Navigation("ComplaintTbls");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.UserTbl", b =>
                {
                    b.Navigation("ComplaintTbls");

                    b.Navigation("RequestTbls");
                });

            modelBuilder.Entity("WebAppfor_AW_worker.Models.WorkerTbl", b =>
                {
                    b.Navigation("RequestTbls");
                });
#pragma warning restore 612, 618
        }
    }
}
